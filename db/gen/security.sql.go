// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: security.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const checkUserCredentials = `-- name: CheckUserCredentials :one
SELECT id, username, email 
FROM users 
WHERE username = $1 AND password = $2
`

type CheckUserCredentialsParams struct {
	Username string
	Password string
}

type CheckUserCredentialsRow struct {
	ID       int64
	Username string
	Email    string
}

func (q *Queries) CheckUserCredentials(ctx context.Context, arg CheckUserCredentialsParams) (CheckUserCredentialsRow, error) {
	row := q.db.QueryRow(ctx, checkUserCredentials, arg.Username, arg.Password)
	var i CheckUserCredentialsRow
	err := row.Scan(&i.ID, &i.Username, &i.Email)
	return i, err
}

const updateUserPassword = `-- name: UpdateUserPassword :one
UPDATE users 
SET password = $2 
WHERE id = $1 
RETURNING id, username, email, created_at, currency
`

type UpdateUserPasswordParams struct {
	ID       int64
	Password string
}

type UpdateUserPasswordRow struct {
	ID        int64
	Username  string
	Email     string
	CreatedAt pgtype.Timestamptz
	Currency  string
}

func (q *Queries) UpdateUserPassword(ctx context.Context, arg UpdateUserPasswordParams) (UpdateUserPasswordRow, error) {
	row := q.db.QueryRow(ctx, updateUserPassword, arg.ID, arg.Password)
	var i UpdateUserPasswordRow
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Email,
		&i.CreatedAt,
		&i.Currency,
	)
	return i, err
}
